{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","to","id","activeClassName","s","active","name","Message","className","user","src","alt","userText","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textareaNews","placeholder","component","Textarea","validate","required","inputNews","Dialogs","dialosElements","dialogsPage","dialogs","map","dialog","messagesElements","messages","users","conversation","addPosts","values","sendMessage","text","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","newMessageBody","addDialogActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,8BAA8B,UAAY,6B,6FCS9QC,EANI,SAACC,GAChB,OACI,6BAAI,cAAC,IAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,gBAAiBC,IAAEC,OAAxD,SAAiEL,EAAMM,UCWpEC,EAdC,SAACP,GACb,OACI,oCACI,sBAAKQ,UAAWJ,IAAEK,KAAlB,UACI,qBAAKC,IAAI,0DAA0DC,IAAI,WACvE,6BAAKX,EAAMS,UAEf,qBAAKD,UAAWJ,IAAEQ,SAAlB,SACI,4BAAIZ,EAAMa,gB,iCCHpBC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAAEC,KAAM,UAAlBD,EATL,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOb,UAAWJ,IAAEkB,aAAchB,KAAM,OAAQiB,YAAa,kBAAmBC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,KAC1H,wBAAQN,UAAWJ,IAAEwB,UAArB,wBAOGC,EAvCC,SAAC7B,GACb,IAAI8B,EAAiB9B,EAAM+B,YAAYC,QAAQC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAY5B,KAAM4B,EAAO5B,KAAsBJ,GAAIgC,EAAOhC,IAAtBgC,EAAOhC,OAEpGiC,EAAmBnC,EAAM+B,YAAYK,SAASH,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASJ,KAAMI,EAAQJ,MAAWI,EAAQX,OAMrI,OACI,qCACI,0BAASM,UAAWJ,IAAE4B,QAAtB,UACI,yCACA,oBAAIxB,UAAWJ,IAAEiC,MAAjB,SACKP,OAIT,0BAAStB,UAAWJ,IAAEkC,aAAtB,UACKH,EACD,yBAAS3B,UAAWJ,IAAEmC,SAAtB,SACI,cAACvB,EAAD,CAAqBG,SAhBjB,SAACqB,GACjBxC,EAAMyC,YAAYD,EAAOE,kB,gECZ7BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,QCiBRE,4BACXC,aAhBkB,SAACJ,GACnB,MAAO,CACHb,YAAaa,EAAMb,gBAKF,SAACkB,GACtB,MAAO,CACHR,YAAa,SAACS,GACVD,EAASE,YAAuBD,UDTZ,SAACE,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKtD,MAAM6C,OAER,cAACO,EAAD,eAAeE,KAAKtD,QAFG,cAAC,IAAD,CAAUC,GAAG,eAHR,GACXsD,IAAMH,WAQtC,OAAOJ,YAAQL,EAARK,CAAoCK,KCKhCN,CAGblB","file":"static/js/4.fa5c31e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__33IbG\",\"users\":\"Dialogs_users__1u-Gm\",\"conversation\":\"Dialogs_conversation__19ERG\",\"user\":\"Dialogs_user__2wVS5\",\"active\":\"Dialogs_active__2RZDC\",\"userText\":\"Dialogs_userText__1Fu3n\",\"textareaNews\":\"Dialogs_textareaNews__1u_z0\",\"inputNews\":\"Dialogs_inputNews__jFBtm\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <li><NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink></li>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <article>\r\n            <div className={s.user}>\r\n                <img src='https://image.flaticon.com/icons/png/512/194/194938.png' alt='avatar' />\r\n                <h3>{props.user}</h3>\r\n            </div>\r\n            <div className={s.userText}>\r\n                <p>{props.message}</p>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {Textarea} from '../common/FormsControls/FormsControls'; \r\nimport {required,maxLengthCreator} from '../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialosElements = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message message={message.message} user={message.user} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.text);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={s.dialogs}>\r\n                <h1>Dialogs</h1>\r\n                <ul className={s.users}>\r\n                    {dialosElements}\r\n                </ul>\r\n            </section>\r\n\r\n            <section className={s.conversation}>\r\n                {messagesElements}\r\n                <section className={s.addPosts}>\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </section>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={s.textareaNews} name={'text'} placeholder={'Your message...'} component={Textarea} validate={[required, maxLength50]}/>\r\n            <button className={s.inputNews}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialog' })(AddMessageForm);  \r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { addDialogActionCreator } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addDialogActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}